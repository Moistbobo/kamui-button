{"version":3,"sources":["assets/images/kimochii.png","assets/sounds/kimochii.mp3","assets/assets.ts","pages/Main/index.tsx","router/RootRouter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["kimochiiImage","require","default","kimochiiSound","Main","useSound","playOn","React","useState","counter","setCounter","className","type","onClick","prev","alt","src","RootRouter","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAAA,OAAe,cAA0B,sC,gCCAzC,OAAe,cAA0B,sC,uICC5BA,EAAgBC,EAAQ,IAAyBC,QAGjDC,EAAgBF,EAAQ,IAAyBC,Q,OC4B/CE,EA3BF,WAAO,IAAD,EACAC,YAASF,GAAnBG,EADU,sBAGaC,IAAMC,SAAS,GAH5B,mBAGVC,EAHU,KAGDC,EAHC,KAWjB,OACE,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,SAAd,0BACA,qBAAKA,UAAU,UAAf,SACE,wBAAQC,KAAK,SAASD,UAAU,SAASE,QAV/B,WACdP,IAEAI,GAAW,SAACI,GAAD,OAAUA,EAAO,MAOxB,SACE,qBAAKC,IAAI,OAAOC,IAAKhB,QAIzB,oBAAGW,UAAS,eAAsB,IAAZF,EAAgB,SAAW,IAAjD,sCACiCA,SCVxBQ,EAVI,kBACjB,qBAAKN,UAAU,cAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,IAAIC,UAAWhB,WCE1BiB,MARf,WACE,OACE,qBAAKV,UAAU,MAAf,SACE,cAAC,EAAD,OCOSW,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.82c4acf3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/kimochii.c906f290.png\";","export default __webpack_public_path__ + \"static/media/kimochii.2a72fd71.mp3\";","// images\nexport const kimochiiImage = require('./images/kimochii.png').default;\n\n// sounds\nexport const kimochiiSound = require('./sounds/kimochii.mp3').default;\n","import React from 'react';\nimport './Main.scss';\nimport useSound from 'use-sound';\nimport {kimochiiImage, kimochiiSound} from 'assets/assets';\n\nconst Main = () => {\n  const [playOn] = useSound(kimochiiSound);\n\n  const [counter, setCounter] = React.useState(0);\n\n  const onClick = () => {\n    playOn();\n\n    setCounter((prev) => prev + 1);\n  };\n\n  return (\n    <div className=\"main-page\">\n      <h1 className=\"header\">Kamui Button</h1>\n      <div className=\"content\">\n        <button type=\"button\" className=\"button\" onClick={onClick}>\n          <img alt=\"kimo\" src={kimochiiImage} />\n        </button>\n      </div>\n\n      <p className={`text ${counter === 0 ? 'hidden' : ''}`}>\n        Times Kimochi Yokatta&apos;d: {counter}\n      </p>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport './RootRouter.scss';\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Main from 'pages/Main';\n\nconst RootRouter = () => (\n  <div className=\"main-router\">\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Main} />\n      </Switch>\n    </Router>\n  </div>\n);\n\nexport default RootRouter;\n","import React from 'react';\nimport './App.css';\nimport RootRouter from 'router/RootRouter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RootRouter />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}